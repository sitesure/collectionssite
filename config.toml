# Settings
baseURL = "http://example.org/"
languageCode = "en-us"
title = "Our Collections"
theme = "autophugo"
#googleAnalytics = ""
disableKinds = ["taxonomy", "taxonomyTerm"]

[Author]
    name = "Karl Sickendick"
    email = "kc0bfv@gmail.com"

[params]
    # Meta
    description = "AutoPhugo - Photo Gallery on Hugo"
    keywords = "phugo, hugo, photogallery, photoblog, hugo theme"
    #msvalidate = ""
    #googlesiteverification = ""
    #thumb_width = 480
    #thumb_quality = 50
    #full_width = 960
    #full_quality = 90
    
    # Headerbar links
    # Do not put here too many links,
    # it will break mobile appearance

    [[params.header.links]]
    name = "About"
    url = "#footer"
    icon = "fa-info-circle"    
    
    # Footer panel
    
    [params.footer.paragraph]
    headline = "Our Collecitons"
    text = "Images of our collections."
    
    [params.footer.social]
    headline = "Follow me"

    [[params.footer.social.links]]
    label = "Twitter"
    url = "#"
    icon = "fa-twitter"

    [[params.footer.social.links]]
    label = "Facebook"
    url = "#"
    icon = "fa-facebook"

    [[params.footer.social.links]]
    label = "Instagram"
    url = "#"
    icon = "fa-instagram"

    [[params.footer.social.links]]
    label = "Github"
    url = "#"
    icon = "fa-github"

    [[params.footer.social.links]]
    label = "LinkedIn"
    url = "#"
    icon = "fa-linkedin"
    
    # Contact form
    
    # Since this template is static, the contact form uses www.formspree.io as a
    # proxy. The form makes a POST request to their servers to send the actual
    # email. Visitors can send up to a 1000 emails each month for free.
    #
    # What you need to do for the setup?
    #
    # - set your email address under 'realEmail' below
    # - upload the generated site to your server
    # - send a dummy email yourself to confirm your account
    # - click the confirm link in the email from www.formspree.io
    # - you're done. Happy mailing!
    
    [params.footer.contact]
    hide = false # Set this to true if you don't want to have a contact form on your site
    realEmail = "example@example.org"
    headline = "Get in touch"
    buttonText = "Send"
    resetText = "Reset"
    
    # 'warning' defines error messages for invalid inputs
    [params.footer.contact.name]
    text = "Name *"
    warning = "Please, enter your name"

    [params.footer.contact.email]
    text = "Email *"
    warning = "Please, enter your email."

    [params.footer.contact.message]
    text = "Message *"
    warning = "Please, enter your message"
    
    # Copyright
    [params.footer.copyright]
    name = "Your name"


[deployment]
# By default, files are uploaded in an arbitrary order.
# Files that match the regular expressions in the "Order" list
# will be uploaded first, in the listed order.
order = [".jpg$", ".gif$"]

[[deployment.targets]]
# An arbitrary name for this target.
name = "mydeployment"
# The Go Cloud Development Kit URL to deploy to. Examples:
# GCS; see https://gocloud.dev/howto/blob/#gcs
# URL = "gs://<Bucket Name>"

# S3; see https://gocloud.dev/howto/blob/#s3
# For S3-compatible endpoints, see https://gocloud.dev/howto/blob/#s3-compatible
# URL = "s3://<Bucket Name>?region=<AWS region>"

# Azure Blob Storage; see https://gocloud.dev/howto/blob/#azure
URL = "azblob://ourcollections/ourcollectionsite"

# You can use a "prefix=" query parameter to target a subfolder of the bucket:
# URL = "gs://<Bucket Name>?prefix=a/subfolder/"

# If you are using a CloudFront CDN, deploy will invalidate the cache as needed.
#cloudFrontDistributionID = <ID>

# Optionally, you can include or exclude specific files.
# See https://godoc.org/github.com/gobwas/glob#Glob for the glob pattern syntax.
# If non-empty, the pattern is matched against the local path.
# All paths are matched against in their filepath.ToSlash form.
# If exclude is non-empty, and a local or remote file's path matches it, that file is not synced.
# If include is non-empty, and a local or remote file's path does not match it, that file is not synced.
# As a result, local files that don't pass the include/exclude filters are not uploaded to remote,
# and remote files that don't pass the include/exclude filters are not deleted.
# include = "**.html" # would only include files with ".html" suffix
# exclude = "**.{jpg, png}" # would exclude files with ".jpg" or ".png" suffix


# [[deployment.matchers]] configure behavior for files that match the Pattern.
# Samples:

[[deployment.matchers]]
#  Cache static assets for 1 year.
pattern = "^.+\\.(js|css|svg|ttf)$"
cacheControl = "max-age=31536000, no-transform, public"
gzip = true

[[deployment.matchers]]
pattern = "^.+\\.(png|jpg)$"
cacheControl = "max-age=31536000, no-transform, public"
gzip = false

[[deployment.matchers]]
pattern = "^.+\\.(html|xml|json)$"
gzip = true